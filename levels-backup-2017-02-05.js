// x, y, width, height
levels = [
	{
		// 1-V
		lines :
		[
			[50, 0, 0, 100]
		],
		answer :
			"-1,0,0,1,100,0"
		, player :
			[10, 46],
		par: 1,
		help:
		{
			text: [[10, 12, "Click the line to reflect"]]
		}
	},
	{
		// 1-V
		lines :
		[
			[30, 0, 0, 100],
			[50, 0, 0, 100]
		],
		answer :
			"-1,0,0,1,100,0"
		, player :
			[10, 46],
		par: 1,
		obstacles :
		[
			"-1,0,0,1,60,0"
		],
		help:
		{
			text: [[10, 12, "Don't land on red"]]
		}
	},
	{
		// 2-V
		// Translated
		lines :
		[
			[50, 0, 0, 100],
			[90, 0, 0, 100]
		],
		answer :
			"1,0,0,1,80,0"
		, player :
			[10, 46],
		par: 2,
		help:
		{
			text: [[10, 12, "Two parallel reflections makes a translation\nIt's not a law of Flip, it's a law of the universe"]],
			lines: [[50, 50, 40, 0], [10, 60, 40, 0], [50, 60, 40, 0]]
		}
	},
	{
		// 2-V
		// Dialated
		lines :
		[
			[50, 0, 0, 100],
			[70, 0, 0, 100]
		],
		answer :
			"1,0,0,1,80,0"
		, player :
			[10, 46],
		par: 4,
		help:
		{
			text: [[10, 12, "You move twice the distance between the lines,\nno matter where the lines are"]],
			lines: [[50, 60, 20, 0], [10, 70, 40, 0], [50, 70, 40, 0]]
		}
	},
	{
		// 3-V
		// Have to go backwards twice
		lines :
		[
			[20, 0, 0, 100],
			[60, 0, 0, 100],
			[68, 0, 0, 100]
		],
		answer :
			"1,0,0,1,48,0"
		, player :
			[10, 46],
		par: 6,
		help:
		{
			text: [[10, 12, "The order you reflect dictates the direction"]],
			lines: [[68, 60, -8, 0], [74, 70, -16, 0], [90, 70, -16, 0]]
		}
	},
	{
		// 3-V
		// Have to reflect on the way through a translation
		lines :
		[
			[27, 0, 0, 100],
			[45, 0, 0, 100],
			[55, 0, 0, 100]
		],
		answer :
			"-1,0,0,1,94,0"
		, player :
			[10, 46],
		par: 5,
		obstacles :
		[
			"1,0,0,1,56,0"
		],
		help:
		{
			text: [[10, 12, "That R is backwards!\nYou'll need a reflection on top of your translation\nThat means an odd number of flips"]],
		}
	},
	{
		// 3-V
		// New level, reflection at the last
		lines :
		[
			[30, 0, 0, 100],
			[50, 0, 0, 100],
			[62, 0, 0, 100]
		],
		answer :
			"-1,0,0,1,44,0"
		, player :
			[10, 46],
		par: 5
	},
	{
		// 2-V-2-H
		// Two translations in each direction
		lines :
		[
			[0, 60, 100, 0],
			[0, 70, 100, 0],
			[40, 0, 0, 100],
			[50, 0, 0, 100]
		],
		answer :
			"1,0,0,1,40,-20"
		, player :
			[10, 46],
		par: 6
	},
	{
		// 2-D
		// Translation with diagonal lines
		lines :
		[
			[10, 0, 30, 100],
			[50, 0, 30, 100]
		],
		answer :
			"1,0,0,1,73.39449310302734,-22.018348693847656"
		, player :
			[10, 46],
		par: 2
	},
	{
		// 4-D
		// Two translation with diagonal lines; paired
		lines :
		[
			[10, 0, 30, 100],
			[30, 0, 30, 100],
			[80, 0, -20, 100],
			[90, 0, -20, 100]
		],
		answer :
			"1,0,0,1,55.92800521850586,-7.163026809692383"
		, player :
			[10, 46],
		par: 4,
		obstacles :
		[
			"-0.8348624110221863,0.5504587292671204,0.5504587292671204,0.8348624110221863,55.04587173461914,-16.513761520385742"
		],
		help:
		{
			text: [[10, 12, "Stay right-side up!\nStick to reflecting parallel line pairs."]]
		}
	},
	{
		// 4-D
		// Two translation with diagonal lines
		lines :
		[
			[20, 0, 30, 100],
			[40, 0, 30, 100],
			[50, 0, -20, 100],
			[60, 0, -20, 100]
		],
		answer :
			"1,0,0,1,75.15877532958984,-3.3168673515319824"
		, player :
			[10, 46],
		par: 6,
		obstacles :
		[
			"0.5589273112208892,0.8292166549047282,-0.8292166549047284,0.5589273112208893,66.5137614678899,-5.0458715596330315"
			, "0.5589273112208892,0.8292166549047282,-0.8292166549047284,0.5589273112208893,85.74453069865913,-1.1997177134791848"
			, "0.5589273112208892,-0.8292166549047283,0.8292166549047283,0.5589273112208895,-32.99223712067747,57.9745942131263"
			, "0.5589273112208892,0.8292166549047282,-0.8292166549047284,0.5589273112208893,56.104446012702894,-25.476358503881446"
		],
		help:
		{
			text: [[10, 22, "Parallel!"]]
		}
	},
	{
		// 2-D
		// Two diagonals makes a rotation
		lines :
		[
			[40, 0, 20, 100],
			[60, 0, -20, 100]
		],
		answer :
			"0.7041420118343197,0.7100591715976332,-0.7100591715976331,0.7041420118343197,50.29585798816568,-20.71005917159764"
		, player :
			[10, 46],
		par: 2,
		obstacles :
		[
			"0.7041420118343197,-0.7100591715976332,0.7100591715976331,0.7041420118343197,-20.71005917159765,50.29585798816568"
		],
		help:
		{
			text: [[10, 200, "A two reflections on crossing lines creats a rotation\nSound familiar?"]],
			curves: [
				[50, 50, -5/1, "-", 5/1, "+", "short"],
				[50, 50, 0, "+", 1, "+", "short"]
			]
		}
	},
	{
		// 2-D
		// Repeated
		lines :
		[
			[40, 0, 20, 100],
			[60, 0, -20, 100]
		],
		answer :
			"-0.008368054339833897,0.9999649872203358,-0.9999649872203355,-0.008368054339833841,100.41665207800848,0.42015335597492864"
		, player :
			[10, 46],
		par: 4
	},
	{
		// 4-D
		// Reflect across two crosses
		lines :
		[
			[20, 0, 40, 100],
			[50, 0, -20, 100],
			[50, 0, 50, 100],
			[90, 0, -30, 100]
		],
		answer :
			"-0.777431911738535,-0.6289671077334383,0.6289671077334389,-0.7774319117385351,72.5296550278236,79.09450007975053"
		, player :
			[10, 46],
		par: 6,
		obstacles :
		[
			"0.9862068965517242,-0.1655172413793103,0.1655172413793103,0.9862068965517242,48.275862068965516,-20.689655172413786"
			, "0.9823570924488356,0.18701482004234282,-0.18701482004234304,0.9823570924488356,74.27664079040228,12.667607621736074"
			, "0.24615384615384617,-0.9692307692307693,0.9692307692307692,0.24615384615384628,37.6923076923077,48.46153846153845"
			, "0.403183023872679,-0.9151193633952255,0.9151193633952255,0.40318302387267896,-21.88328912466843,66.44562334217507"
			, "0.2249288199936728,0.9743751977222399,-0.9743751977222398,0.22492881999367287,143.94179057260362,19.04460613729832"
		]
	},
	{
		// 4-D
		// Rotate around two non-parallel crosses
		lines :
		[
			[20, 0,  20, 100],
			[35, 0, -30, 100],
			[45, 0,  40, 100],
			[55, 0, -15, 100]
		],
		answer :
			"-0.9989282239899027,-0.04628610284284529,0.04628610284284562,-0.998928223989903,100.61177832059741,65.65039859282248"
		, player :
			[10, 46],
		par: 6,
		obstacles :
		[
			"0.9596240550907337,-0.281285749534555,0.2812857495345551,0.9596240550907337,40.532962472802296,15.712971893856121"
			, "0.22492881999367287,-0.9743751977222397,0.9743751977222399,0.2249288199936728,44.368870610566276,27.206580196140464"
			, "0.7696069211961632,0.6385179612563475,-0.6385179612563475,0.7696069211961631,73.06751927778822,-2.5014105698702273"
			, "0.9336870026525199,-0.35809018567639267,0.35809018567639267,0.9336870026525197,44.429708222811676,-10.079575596816973"
		]
	},
	{
		// 1-V-2-D
		lines :
		[
			[10, 0, 10, 100],
			[50, 0, 0, 100],
			[0, 20, 100, 40]
		],
		answer :
			"0.14999823406835316,0.988686264583652,0.9886862645836523,-0.14999823406835328,6.597520631968052,68.11551547544767"
		, player :
			[10, 46],
		par: 5,
		obstacles :
		[
			"0.9801980198019802,0.19801980198019803,-0.19801980198019803,0.9801980198019802,80.1980198019802,-1.9801980198019801"
		]
	},
	{
		// 4-D
		// Rotate forwards, then backwards
		lines :
		[
			[30, 0,  30, 100],
			[40, 0, -30, 100],
			[50, 0,  20, 100],
			[80, 0, -20, 100]
		],
		answer :
			"-0.9223793050089071,-0.38628540962775903,0.3862854096277592,-0.9223793050089075,32.764936223857894,134.38006387355375"
		, player :
			[10, 46],
		par: 6
	},
	{
		// 2-V-1-D
		lines :
		[
			[30, 0, 20, 100],
			[60, 0, 0, 100],
			[80, 0, 0, 100]
		],
		answer :
			"1,0,0,1.0000000000000002,36.92307692307692,-15.384615384615385"
		, player :
			[10, 46],
		par: 4
	},
	{
		// 0-V-0-H-3-D
		lines :
		[
			[0, 100, 100, -100],
			[0, 70, 100, -20],
			[0, 30, 100, 40],
		],
		answer :
			"-0.9407299003018386,0.33915668160614654,-0.3391566816061464,-0.9407299003018386,94.59892069880179,82.98271288758804"
		, player :
			[10, 46],
		par: 6
	},
	{
		// 2-V-1-H-1-D
		lines :
		[
			[30, 0, 0, 100],
			[50, 0, 0, 100],
			[0, 70, 100, -30],
			[0, 70, 100, 0]
		],
		answer :
			"0.834862385321101,-0.5504587155963302,0.5504587155963303,0.8348623853211009,34.862385321100916,-10.45871559633028"
		, player :
			[10, 46],
		par: 6
	},
	{
		// 2-V-0-H-2-D
		lines :
		[
			[20, 0, 0, 100],
			[50, 0, 0, 100],
			[10, 0, 90, 70],
			[0, 70, 100, -50]
		],
		answer :
			"-0.24615384615384622,0.9692307692307695,-0.9692307692307695,-0.24615384615384622,76.15384615384615,76.76923076923077"
		, player :
			[10, 46],
		par: 6
	},
	{
		// 1-V-1-H-2-D
		lines :
		[
			[0, 30, 100, 0],
			[40, 0, 0, 100],
			[0, 80, 80, -100],
			[20, 0, 100, 60]
		],
		answer :
			"-0.9641319942611192,-0.26542324246771887,0.265423242467719,-0.9641319942611191,48.26398852223818,90.8464849354376"
		, player :
			[10, 46],
		par: 6
	},
	{
		// Cross with two diagonals
		lines :
		[
			[0, 20, 100, 40],
			[0, 60, 100, -10],
			[40, 0, 0, 100],
			[0, 80, 100, 0]
		],
		answer :
			"-0.7241379310344828,0.6896551724137929,0.689655172413793,0.7241379310344827,42.11676340047798,-5.995220211676354"
		, player :
			[10, 46],
		par: 7
	},
	{
		// Cross with two diagonals, containing a V shape
		// TODO: Delete?
		lines :
		[
			[0, 10, 50, 90],
			[50, 0, 0, 100],
			[0, 60, 100, 0],
			[0, 40, 100, -10]
		],
		answer :
			"0.6106926463383254,0.7918677236182146,-0.7918677236182143,0.6106926463383255,102.80083691920044,46.69157747803904"
		, player :
			[10, 46]
	}
];
